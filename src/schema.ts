/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/tasks": {
    get: operations["show_tasks_get"];
    post: operations["create_tasks_post"];
  };
  "/user": {
    get: operations["show_user_user_get"];
    post: operations["create_user_user_post"];
  };
  "/roadmaps": {
    post: operations["create_roadmap_roadmaps_post"];
  };
  "/roadmaps/{roadmap_id}": {
    get: operations["show_roadmap_roadmaps__roadmap_id__get"];
    patch: operations["patch_roadmap_roadmaps__roadmap_id__patch"];
  };
  "/": {
    get: operations["read_root__get"];
  };
}

export interface components {
  schemas: {
    /** CreateRoadmapRequest */
    CreateRoadmapRequest: {
      /** Title */
      title: string;
      /** Tags */
      tags: unknown[];
      /** Edges */
      edges: components["schemas"]["Edge"][];
      /** Vertexes */
      vertexes: components["schemas"]["Vertex"][];
    };
    /** CreateTask */
    CreateTask: {
      /** Name */
      name: string;
    };
    /** CreateUserRequest */
    CreateUserRequest: {
      /** Name */
      name: string;
    };
    /** Edge */
    Edge: {
      /** Id */
      id: string;
      /** Source Id */
      source_id: string;
      /** Target Id */
      target_id: string;
      /** Is Solid Line */
      is_solid_line: boolean;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Roadmap */
    Roadmap: {
      /** Id */
      id: string;
      /** Author Id */
      author_id: string;
      /** Title */
      title: string;
      /** Favorited */
      favorited: boolean;
      /** Favorite Count */
      favorite_count: number;
      /** Tags */
      tags: unknown[];
      /** Edges */
      edges: components["schemas"]["Edge"][];
      /** Vertexes */
      vertexes: components["schemas"]["Vertex"][];
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string;
    };
    /** Task */
    Task: {
      /** Id */
      id: string;
      /** Name */
      name: string;
    };
    /** UpdateRoadmapRequest */
    UpdateRoadmapRequest: {
      /** Title */
      title?: string;
      /** Tags */
      tags?: unknown[];
      /** Edges */
      edges?: components["schemas"]["Edge"][];
      /** Vertexes */
      vertexes?: components["schemas"]["Vertex"][];
    };
    /** User */
    User: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /**
       * Last Login At
       * Format: date-time
       */
      last_login_at: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (Partial<string> & Partial<number>)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** Vertex */
    Vertex: {
      /** Id */
      id: string;
      /** X Coordinate */
      x_coordinate: number;
      /** Y Coordinate */
      y_coordinate: number;
    };
  };
}

export interface operations {
  show_tasks_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Task"][];
        };
      };
    };
  };
  create_tasks_post: {
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTask"];
      };
    };
  };
  show_user_user_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  create_user_user_post: {
    responses: {
      /** Successful Response */
      201: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequest"];
      };
    };
  };
  create_roadmap_roadmaps_post: {
    responses: {
      /** Successful Response */
      201: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRoadmapRequest"];
      };
    };
  };
  show_roadmap_roadmaps__roadmap_id__get: {
    parameters: {
      path: {
        roadmap_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Roadmap"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  patch_roadmap_roadmaps__roadmap_id__patch: {
    parameters: {
      path: {
        roadmap_id: string;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRoadmapRequest"];
      };
    };
  };
  read_root__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}

export interface external {}
